// 関数宣言
// 関数とは、いくつかの処理をまとめたものです。
// 関数宣言の特徴は、コードの順番に関係なく実行されます。

// // 関数宣言
// function 関数名() {
//     // 実行したい処理を記載
// }
// //  関数呼び出し
// 関数名()

// 以下の順番でもOK
// //  関数呼び出し
// 関数名()
// // 関数宣言
// function 関数名() {
//     // 実行したい処理を記載
// }

// 例1 ログを出力する関数を宣言し、呼び出します
// 関数宣言
function outputLog1() {
  console.log("ログを出力します");
}
//  関数呼び出し
outputLog1();

// 例2 ログを出力する関数を宣言し、呼び出します
//  関数呼び出し
outputLog2();
// 関数宣言
function outputLog2() {
  console.log("ログを出力します");
}

// 関数式は変数宣言と似た記述方法で関数を定義することを指しています。
// 関数式で定義した関数を実行させるには、必ず定義後に記述する必要があります。
// 基本構文は次のとおりです。

// const 関数名 = function () {
//   // 実行したい処理を記載
// };
// // 関数呼び出し
// 関数名();

// // 関数式の定義前で呼び出すのはNG;
// 関数呼び出し（NG)
// 関数名();
// const 関数名 = function () {
//   // 実行したい処理を記載
// };

// 例1.ログを出力する関数を呼び出す;
// 関数定義
const outputLog = function () {
  console.log("ログを出力します");
};
//  関数呼び出し
outputLog();

// アロー関数（１）
// 関数式をより短く記述できる構文です
// また、アロー関数には省略形があります。
// const 関数名 = (引数、 ...) => { 関数の処理 }

// 例1 引数に個数と単価を渡し金額を計算するアロー関数を定義する
var payment = (count, price) => {
  return count * price;
};

// 例2 引数が1つの場合()を省略できる
var double = (count) => {
  return count * 2;
};

// 例3 処理が1文の場合、returnも省略できる
var double = (count) => count * 2;

// 例4 引数に1を足して、コンソールに出力
var onePlusCount = (val) => {
  val++;
  console.log(val);
};
onePlusCount(0); // 1
onePlusCount(10); // 11

// 関数（引数あり）
// 関数の処理には、特定の値を受け取り、その値を利用できます。
// その値を受け取るには引数を記述する必要があり、引数名は渡す側の変数名と同じでなくても構いません。
// 基本構文は次のとおりです。
// // 関数宣言
// function 関数名(引数) {
//     // 呼び出したい処理を記載
// }

// // 関数式
// const 関数名 = function (引数) {
//   // 呼び出したい処理を記載
// };
// // アロー関数
// const 関数名 = (引数) => {
//   // 実行したい処理を記述
// };

// 関数名(処理に利用する値);
// ()の中に処理に利用する特定の値を記述する。
// 例1.自分の名前を紹介する関数を呼び出す;
function getName(name) {
  console.log("私の名前は" + name + "です");
}
getName("山田");

// 関数（戻り値）
// 関数の中で return 文を使用することで呼び出し元へ値を返すことができます。
// const 関数名 = () => {
//   return '返す値'
// }
// 戻り値を変数に格納
// const returnData = 関数名()
// console.log(returnData) // 返す値

// 例1. 関数から返された値（文字列）を出力する
var getName = (lastName) => {
  return `私の名前は${lastName}です`;
};
console.log(getName("田中")); // 私の名前は田中です

// 例2. 関数から返された値（数値）を出力する
var getNumber = (number) => {
  return number;
};
console.log(getNumber(10)); // 10
