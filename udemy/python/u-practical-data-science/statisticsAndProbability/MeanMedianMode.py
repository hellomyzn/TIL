
import numpy as np
import matplotlib.pyplot as plt
from scipy import stats
"""
平均値 vs. 中央値
疑似的な収入分布を作りましょう。27000を中央にした正規分布で、標準偏差は15000、
データ数は10000とします。（用語については後程解説します。）
そして、平均値を計算してみましょう。27000に近くなるはずです。
"""

incomes = np.random.normal(27000, 15000, 10000)
np.mean(incomes)

"""
収入データを50個にセグメント化し、ヒストグラムにプロットすることもできます。
"""
plt.hist(incomes, 50, edgecolor="k")

"""
中央値を計算してみましょう。今回はきれいな分布をしているため、中央値は平均値と同様に27000に近くなります。
"""
np.median(incomes)
"""
大富豪をデータに混ぜてみましょう。所得格差を実感してみましょう。
"""

incomes = np.append(incomes, [10000000000])
"""
中央値は大きく変わりませんが、平均値は大きく変わります。
"""
np.median(incomes)

np.mean(incomes)


"""
モード
次に、疑似的な年齢のデータを500人分作りましょう。
"""

ages = np.random.randint(18, high=90, size=500)
ages
stats.mode(ages)


"""
練習: 購入金額の平均値と中央値
疑似的な電子商取引における購入金額の分布を作るコードです。乱数を使って生成しています。
"""

incomes = np.random.normal(100.0, 20.0, 10000)
plt.hist(incomes, 50, edgecolor="k")

"""
このデータの、平均値と中央値を見つけてください。以下のコードブロックにコードを書いて、
実行し正しい実行結果が得られることを確認しましょう。

簡単な例から始めて、徐々にJupiterにコードを書くこととnumpyを扱うことに慣れていきましょう。
ここまでのコードを用いて自由に遊んでみましょう。様々な分布を表示させたり、外れ値を追加して
その影響を見たりしてみましょう。
"""
